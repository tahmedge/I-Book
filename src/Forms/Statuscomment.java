package Forms;


import DB.SignUp;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Tahmid
 */
public class Statuscomment extends javax.swing.JFrame {

    /**
     * Creates new form Statuscomment
     */
    SignUp ob=new SignUp();
    public Statuscomment() throws ClassNotFoundException, SQLException {
        initComponents();
        setResizable(false);
       //  String b=ob.uname[ob1.userpos];
      //  jTextArea1.setText(ob.statusdisplay);
          userwall.setText(ob.uname[ob.sbutrack[ob.searchindex]]);
        String comm = null;
        try {
            // TODO add your handling code here:
            comm = ob.getStatusComment(Integer.toString(ob.nfutrack[ob.newsfeedindex]), Integer.toString(ob.nfstrack[ob.newsfeedindex]));
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        int r=0;
           jTextArea1.append(ob.statusdisplay);
           ob.loadUserStatus(Integer.toString(ob.nfutrack[ob.newsfeedindex]));
        if( ob.statuscommenttrack[ob.nfutrack[ob.newsfeedindex]][ob.nfstrack[ob.newsfeedindex]]!=0)
          
             Commentlist.append(comm+"\n\n");
         // =b+":   "+writecomment.getText()+"\n\n";
        
    }
Intro ob1=new Intro();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Commentlist = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        writecomment = new javax.swing.JTextArea();
        Postcomment = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        home = new javax.swing.JButton();
        profile = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        userwall = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Commentlist.setBackground(new java.awt.Color(204, 204, 204));
        Commentlist.setColumns(20);
        Commentlist.setEditable(false);
        Commentlist.setRows(5);
        jScrollPane2.setViewportView(Commentlist);

        writecomment.setColumns(20);
        writecomment.setRows(5);
        jScrollPane3.setViewportView(writecomment);

        Postcomment.setBackground(new java.awt.Color(0, 102, 102));
        Postcomment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Postcomment.setForeground(new java.awt.Color(255, 255, 255));
        Postcomment.setText("Post Comment");
        Postcomment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostcommentActionPerformed(evt);
            }
        });

        jLabel1.setText("Write a comment:");

        jPanel1.setBackground(new java.awt.Color(59, 89, 152));

        home.setBackground(new java.awt.Color(0, 102, 102));
        home.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("Homepage");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        profile.setBackground(new java.awt.Color(0, 102, 102));
        profile.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        profile.setForeground(new java.awt.Color(255, 255, 255));
        profile.setText("My Profile");
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        logout.setBackground(new java.awt.Color(0, 102, 102));
        logout.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Log Out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 988, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profile)
                    .addComponent(home))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(logout)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel2.setText("Comments:");

        jLabel3.setText("Status:");

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTextArea1ComponentShown(evt);
            }
        });
        jTextArea1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextArea1ComponentAdded(evt);
            }
        });
        jTextArea1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextArea1PropertyChange(evt);
            }
        });
        jTextArea1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                jTextArea1AncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        userwall.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        userwall.setText("Tahmid's Wall:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(266, 266, 266))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Postcomment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(userwall)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userwall)
                .addGap(13, 13, 13)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Postcomment, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PostcommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostcommentActionPerformed
        
        String com = null;
    //    jTextArea1.append(ob.statusdisplay);
        try {
            // TODO add your handling code here:
            com = ob.getStatusComment(Integer.toString(ob.nfutrack[ob.newsfeedindex]), Integer.toString(ob.nfstrack[ob.newsfeedindex]));
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } 
        com=com.concat("\n\n");
        String b=ob.uname[ob1.userpos];
        com=com.concat(b+":   "+writecomment.getText().toString());
        Commentlist.append(b+":   "+writecomment.getText()+"\n\n");
        try {
            //ob.statuscomment[ob.nfutrack[ob.newsfeedindex]][ob.nfstrack[ob.newsfeedindex]]+=b+":   "+writecomment.getText()+"\n\n";
            ob.loadUserStatus(Integer.toString(ob.nfutrack[ob.newsfeedindex]));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
        ob.statuscommenttrack[ob.nfutrack[ob.newsfeedindex]][ob.nfstrack[ob.newsfeedindex]]++;
        try {
            ob.update_StatusComment(Integer.toString(SignUp.nfutrack[SignUp.newsfeedindex]),Integer.toString(SignUp.nfstrack[SignUp.newsfeedindex]), com, Integer.toString(ob.statuscommenttrack[ob.nfutrack[ob.newsfeedindex]][ob.nfstrack[ob.newsfeedindex]]));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(ob.nfutrack[ob.newsfeedindex]!=ob1.userpos)
        {
        ob.notificationstring[ob.nfutrack[ob.newsfeedindex]][ob.notificationlimit[ob.nfutrack[ob.newsfeedindex]]]=ob.uname[ob1.userpos]+" Has commented on your status";
        ob.Notificationtype[ob.nfutrack[ob.newsfeedindex]][ob.notificationlimit[ob.nfutrack[ob.newsfeedindex]]]=3;
        ob.NotificationlinkUser[ob.nfutrack[ob.newsfeedindex]][ob.notificationlimit[ob.nfutrack[ob.newsfeedindex]]]=ob.nfutrack[ob.newsfeedindex];
        ob.NotificationlinkPost[ob.nfutrack[ob.newsfeedindex]][ob.notificationlimit[ob.nfutrack[ob.newsfeedindex]]]=ob.nfstrack[ob.newsfeedindex];
        String notf = ob.uname[ob1.userpos]+" Has commented on your status";
        String notfFrom = Integer.toString(ob.nfutrack[ob.newsfeedindex]);
        String notfTyp = "3";
        String id = Integer.toString(ob.nfutrack[ob.newsfeedindex]);
        String postNo = Integer.toString(ob.nfstrack[ob.newsfeedindex]);
        String notfNo = null;
        try {
            notfNo = ob.getTotalNotification(id);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int tf = 0;
        try {
            tf = Integer.parseInt(ob.getdbNotificationNo());
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        tf++;
        
        try {
            ob.addNotification(Integer.toString(tf),id, notf, notfNo, notfTyp, notfFrom, postNo);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         try {
            ob.update_Total_dbNotification(Integer.toString(tf));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        ob.notificationlimit[ob.nfutrack[ob.newsfeedindex]]=Integer.parseInt(notfNo);
        ob.notificationlimit[ob.nfutrack[ob.newsfeedindex]]++;
        try {
            ob.update_TotalNotification(id, Integer.toString(ob.notificationlimit[ob.nfutrack[ob.newsfeedindex]]));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
        ob.newnotification[ob.nfutrack[ob.newsfeedindex]]++;
        ob.Notificationtrack[ob.nfutrack[ob.newsfeedindex]]++;
          try {
            ob.updatenewnotification(Integer.toString(ob.nfutrack[ob.newsfeedindex]), Integer.toString(ob.Friendnotificationtrack[ob.nfutrack[ob.newsfeedindex]]), Integer.toString(ob.Notificationtrack[ob.nfutrack[ob.newsfeedindex]]), Integer.toString(ob. messagetrack[ob.nfutrack[ob.newsfeedindex]]), Integer.toString(ob.newevent[ob.nfutrack[ob.newsfeedindex]]));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    }//GEN-LAST:event_PostcommentActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        try {
            new Home().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_homeActionPerformed

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        try {
            new Profile().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_profileActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            ob.updateOnline(Integer.toString(ob1.userpos),(ob.birthday[ob1.userpos]),("0"));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        new Intro().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void jTextArea1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextArea1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1ComponentShown

    private void jTextArea1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextArea1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1ComponentAdded

    private void jTextArea1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextArea1PropertyChange
        // TODO add your handling code here:
        //   NewsFeed ob=new NewsFeed();
        //  jTextArea1.append(ob.b);
    }//GEN-LAST:event_jTextArea1PropertyChange

    private void jTextArea1AncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextArea1AncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1AncestorMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Statuscomment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Statuscomment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Statuscomment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Statuscomment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new Statuscomment().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Commentlist;
    private javax.swing.JButton Postcomment;
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton logout;
    private javax.swing.JButton profile;
    private javax.swing.JLabel userwall;
    private javax.swing.JTextArea writecomment;
    // End of variables declaration//GEN-END:variables
}
