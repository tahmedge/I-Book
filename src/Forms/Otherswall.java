package Forms;


import DB.SignUp;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Tahmid
 */
public class Otherswall extends javax.swing.JFrame {

    /**
     * Creates new form Wall
     */
    SignUp ob=new SignUp();
    Intro ob1=new Intro();
    public Otherswall() throws ClassNotFoundException, SQLException {
        initComponents();
        setResizable(false);
        int i;
        /*for(i=ob.walltrack[ob.sbutrack[ob.searchindex]]-1;i>=0;i--)
        {
            list1.add(ob.wallpost[ob.sbutrack[ob.searchindex]][i]);
            ob.wpstrack[i]=i;
        }*/
        ob.newsfeedindex=ob.searchindex;
        int x = 0;
        try {
            x = Integer.parseInt(ob.getWallTrack(Integer.toString(ob.sbutrack[ob.searchindex])));
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        ob.walltrack[ob.sbutrack[ob.searchindex]]=x;
        ob.loadUserWallpost(Integer.toString(ob.sbutrack[ob.searchindex]));
        
        for(i=ob.walltrack[ob.sbutrack[ob.searchindex]]-1;i>=0;i--)
        {
            list1.add(ob.wallpost[ob.sbutrack[ob.searchindex]][i]);
            list2.add(ob.uname[ob.wallfrom[ob.sbutrack[ob.searchindex]][i]]);
            list3.add(ob.wallpostTime[ob.sbutrack[ob.searchindex]][i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        postonwall = new javax.swing.JTextArea();
        postwall = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        list1 = new java.awt.List();
        jPanel1 = new javax.swing.JPanel();
        home = new javax.swing.JButton();
        profile = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        list2 = new java.awt.List();
        jLabel2 = new javax.swing.JLabel();
        list3 = new java.awt.List();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1317, 603));

        postonwall.setColumns(20);
        postonwall.setRows(5);
        jScrollPane1.setViewportView(postonwall);

        postwall.setBackground(new java.awt.Color(0, 102, 102));
        postwall.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        postwall.setForeground(new java.awt.Color(255, 255, 255));
        postwall.setText("Post");
        postwall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postwallActionPerformed(evt);
            }
        });

        list1.setBackground(new java.awt.Color(255, 255, 255));
        list1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        list1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list1ActionPerformed(evt);
            }
        });
        jScrollPane2.setViewportView(list1);

        jPanel1.setBackground(new java.awt.Color(59, 89, 152));

        home.setBackground(new java.awt.Color(0, 102, 102));
        home.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("Homepage");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        profile.setBackground(new java.awt.Color(0, 102, 102));
        profile.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        profile.setForeground(new java.awt.Color(255, 255, 255));
        profile.setText("My Profile");
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        logout.setBackground(new java.awt.Color(0, 102, 102));
        logout.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Log Out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(979, 979, 979)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logout)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(home)
                            .addComponent(profile))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel1.setText("Wall");

        jLabel2.setText("Posted By");

        list3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Time");

        jLabel4.setText("Write Something on wall...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(394, 394, 394)
                .addComponent(jLabel3))
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(list2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(571, 571, 571)
                        .addComponent(list3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(postwall, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel3)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(list2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(list3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(postwall, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void postwallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postwallActionPerformed
        // TODO add your handling code here:[
     
        
        
        ob.wallpost[ob.sbutrack[ob.searchindex]][ob.walltrack[ob.sbutrack[ob.searchindex]]]=postonwall.getText();
        list1.add( ob.wallpost[ob.sbutrack[ob.searchindex]][ob.walltrack[ob.sbutrack[ob.searchindex]]]);
        list2.add(ob.uname[ob1.userpos]);
        ob.wallfrom[ob.sbutrack[ob.searchindex]][ob.walltrack[ob.sbutrack[ob.searchindex]]]=ob1.userpos; 
       
       
        ob.newsfeedindex=ob.searchindex;
        ob.nfutrack[ob.newsfeedindex]=ob.sbutrack[ob.searchindex];
        int x = 0;
        try {
            x = Integer.parseInt(ob.getWallTrack(Integer.toString(ob.sbutrack[ob.searchindex])));
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
     //   ob.walltrack[ob.sbutrack[ob.searchindex]]=x;
        int tw = 0;
        try {
            tw = Integer.parseInt(ob.getdbWallNo());
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        tw++;
        String time = new SimpleDateFormat("dd/MM/yyyy_HH:mm:ss").format(Calendar.getInstance().getTime());
        list3.add(time);
        try {
            ob.addWallpost(Integer.toString(tw),Integer.toString(ob.sbutrack[ob.searchindex]), Integer.toString(x), postonwall.getText().toString(), Integer.toString(ob1.userpos),time);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ob.update_Total_dbWall(Integer.toString(tw));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        x++;
        try {
            ob.update_TotalWallpost(Integer.toString(ob.sbutrack[ob.searchindex]),Integer.toString(x));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        ob.notificationstring[ob.sbutrack[ob.searchindex]][ob.notificationlimit[ob.sbutrack[ob.searchindex]]]=ob.uname[ob1.userpos]+" Has posted on your Wall";
        ob.Notificationtype[ob.sbutrack[ob.searchindex]][ob.notificationlimit[ob.sbutrack[ob.searchindex]]]=4;
        ob.NotificationlinkUser[ob.sbutrack[ob.searchindex]][ob.notificationlimit[ob.sbutrack[ob.searchindex]]]= ob.sbutrack[ob.searchindex];
        ob.NotificationlinkPost[ob.sbutrack[ob.searchindex]][ob.notificationlimit[ob.sbutrack[ob.searchindex]]]=ob.wallindex;
        
        //  ob.walltrack[ob.sbutrack[ob.searchindex]]++;
        
        String notf = ob.uname[ob1.userpos]+" Has posted on your wall";
        String notfFrom = Integer.toString(ob.sbutrack[ob.searchindex]);
        String notfTyp = "4";
        String id = Integer.toString(ob.sbutrack[ob.searchindex]);
        String postNo = Integer.toString(ob.walltrack[ob.sbutrack[ob.searchindex]]);
        String notfNo = null;
        try {
            notfNo = ob.getTotalNotification(id);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
        int tf = 0;
        try {
            tf = Integer.parseInt(ob.getdbNotificationNo());
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        tf++;
        try {
            ob.addNotification(Integer.toString(tf),id, notf, notfNo, notfTyp, notfFrom, postNo);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
         try {
            ob.update_Total_dbNotification(Integer.toString(tf));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        ob.walltrack[ob.sbutrack[ob.searchindex]]++;
        ob.notificationlimit[ob.sbutrack[ob.searchindex]]=Integer.parseInt(notfNo);
        ob.notificationlimit[ob.sbutrack[ob.searchindex]]++;
        try {
            ob.update_TotalNotification(id, Integer.toString(ob.notificationlimit[ob.sbutrack[ob.searchindex]]));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Statuscomment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        ob.newnotification[ob.sbutrack[ob.searchindex]]++;
        ob.Notificationtrack[ob.sbutrack[ob.searchindex]]++;
        try {
            ob.updatenewnotification(Integer.toString(ob.sbutrack[ob.searchindex]), Integer.toString(ob.Friendnotificationtrack[ob.sbutrack[ob.searchindex]]), Integer.toString(ob.Notificationtrack[ob.sbutrack[ob.searchindex]]), Integer.toString(ob. messagetrack[ob.sbutrack[ob.searchindex]]), Integer.toString(ob.newevent[ob.sbutrack[ob.searchindex]]));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_postwallActionPerformed

    private void list1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list1ActionPerformed
        // TODO add your handling code here:
        int r=list1.getSelectedIndex();
        ob.wallindex=ob.walltrack[ob.sbutrack[ob.searchindex]]-1-r;
      
      
        ob.walldisplay=ob.wallpost[ ob.sbutrack[ob.searchindex]][ob.wallindex];
          
        this.setVisible(false);
        try {
            new WallpostDetails().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_list1ActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        try {
            new Home().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_homeActionPerformed

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        try {
            new Profile().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_profileActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Intro().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void list3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_list3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Otherswall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Otherswall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Otherswall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Otherswall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new Otherswall().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Otherswall.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.List list1;
    private java.awt.List list2;
    private java.awt.List list3;
    private javax.swing.JButton logout;
    private javax.swing.JTextArea postonwall;
    private javax.swing.JButton postwall;
    private javax.swing.JButton profile;
    // End of variables declaration//GEN-END:variables
}
